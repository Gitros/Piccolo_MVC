// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Piccolo.DataAccess.Data;

#nullable disable

namespace Piccolo.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240627144114_AddProductTypeModelSeedDataAndConnectToProduct")]
    partial class AddProductTypeModelSeedDataAndConnectToProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Piccolo.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Pizza"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Calzone"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "Piadina"
                        });
                });

            modelBuilder.Entity("Piccolo.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Ingredients")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int>("PriceBig")
                        .HasColumnType("int");

                    b.Property<int>("PriceSmall")
                        .HasColumnType("int");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Ingredients = "Sos pomidorowy, mozarella, bazylia",
                            Position = 1,
                            PriceBig = 40,
                            PriceSmall = 28,
                            ProductTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Ingredients = "Sos pomidorowy, mozzarella, plastry świeżej mozzarelli, pomidorki koktajlowe, oliwki, bazylia",
                            Position = 2,
                            PriceBig = 48,
                            PriceSmall = 35,
                            ProductTypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Ingredients = "Sos pomidorowy, mozzarella, szynka parmeńska, pomidorki koktajlowe, parmezan, rukola",
                            Position = 3,
                            PriceBig = 54,
                            PriceSmall = 40,
                            ProductTypeId = 2
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Ingredients = "Biały sos, mozzarella, oliwki, szynka parmeńska, parmezan, rukola",
                            Position = 4,
                            PriceBig = 52,
                            PriceSmall = 39,
                            ProductTypeId = 2
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Ingredients = "Sos pomidorowy, mozzarella, salami napoli, suszone pomidory, cebula, bazylia",
                            Position = 5,
                            PriceBig = 53,
                            PriceSmall = 39,
                            ProductTypeId = 3
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Ingredients = "Sos pomidorowy, mozzarella, salami napoli / salami picante, pieczarki, bazylia",
                            Position = 6,
                            PriceBig = 48,
                            PriceSmall = 35,
                            ProductTypeId = 3
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            Ingredients = "Sos pomidorowy, mozzarella, salami picante, ananas, jalapeno, karmelizowana cebula",
                            Position = 7,
                            PriceBig = 51,
                            PriceSmall = 38,
                            ProductTypeId = 3
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            Ingredients = "Sos pomidorowy, mozzarella, salami picante, mascarpone, gorgonzola, oliwki, bazylia",
                            Position = 8,
                            PriceBig = 54,
                            PriceSmall = 40,
                            ProductTypeId = 3
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            Ingredients = "Sos pomidorowy, mozzarella, salami napoli, pieczona papryka, czerwona cebula",
                            Position = 9,
                            PriceBig = 50,
                            PriceSmall = 35,
                            ProductTypeId = 3
                        });
                });

            modelBuilder.Entity("Piccolo.Models.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Vege"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Ham / Parma ham"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Salami Napoli / Salami Picante"
                        },
                        new
                        {
                            Id = 4,
                            Type = "Nduja"
                        },
                        new
                        {
                            Id = 5,
                            Type = "Chicken"
                        },
                        new
                        {
                            Id = 6,
                            Type = "Tuna / Salmon"
                        });
                });

            modelBuilder.Entity("Piccolo.Models.Product", b =>
                {
                    b.HasOne("Piccolo.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Piccolo.Models.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("ProductType");
                });
#pragma warning restore 612, 618
        }
    }
}
